@model Trouvaille.Server.Models.Articles.AddArticleViewModel


@{
    ViewBag.Title = "Create";
}
<script src="~/Scripts/tinymce/tinymce.min.js"></script>
<script>
    tinymce.init({
        selector: '#article-content',
        plugins: [
          'advlist autolink link image lists charmap print preview hr anchor pagebreak spellchecker',
          'searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking',
          'save table contextmenu directionality emoticons template paste textcolor'
        ],
        max_height: 800,
        max_width: 500,
        min_height: 400,
        min_width: 400
    });
</script>
<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm("CreateArticle", "Profile", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="row">
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div>
                            @Html.EditorFor(model => model.Title, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.Subheader, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div>
                            @Html.EditorFor(model => model.Subheader, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Subheader, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-6">
                        <label for="file">Article photo</label>
                        <div>
                            <input type="file" name="file" class="btn cloud-color" />
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.CountryId, "Country", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.CountryId, new SelectList(Model.Countries, "Id", "Name"), htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        @Html.TextAreaFor(model => model.Content, new { @class = "md-textarea", id = "article-content" })
                        @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-offset-8 col-md-10">
                        <input type="submit" value="Create" class="btn stormy-color" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>
